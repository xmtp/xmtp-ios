name: Tag and deploy to Cocoapods

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Install Cocoapods
      run: gem install cocoapods
    
    - name: Extract version from podspec
      id: extract_version
      run: |
        SPEC_VERSION=$(grep 'spec.version' XMTP.podspec | sed -n 's/.*spec\.version *= *"\([^"]*\)".*/\1/p')
        echo "SPEC_VERSION=$SPEC_VERSION" >> $GITHUB_ENV
        echo "Original version: $SPEC_VERSION"
    
    - name: Update version if dev release
      id: update_version
      run: |
        SHORT_SHA=$(git rev-parse --short=7 HEAD)
        if [[ "$SPEC_VERSION" == *"dev"* ]]; then
          UPDATED_VERSION="${SPEC_VERSION}.$SHORT_SHA"
        else
          UPDATED_VERSION="$SPEC_VERSION"
        fi
        echo "UPDATED_VERSION=$UPDATED_VERSION" >> $GITHUB_ENV
        echo "Updated version: $UPDATED_VERSION"
    
    - name: Update podspec with new version
      run: |
        sed -i '' "s/spec\.version *= *\"$SPEC_VERSION\"/spec.version = \"$UPDATED_VERSION\"/" XMTP.podspec
        sed -i '' "s/spec\.version *= *\"$SPEC_VERSION\"/spec.version = \"$UPDATED_VERSION\"/" LibXMTP.podspec
        echo "Updated podspec with version: $UPDATED_VERSION"
    
    - name: Create and push tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "$UPDATED_VERSION" -m "Release $UPDATED_VERSION"
        git push origin "$UPDATED_VERSION"
        echo "Created and pushed tag: $UPDATED_VERSION"
      
    - name: Deploy to Cocoapods
      run: |
        set -eo pipefail
        pod lib lint LibXMTP.podspec --allow-warnings
        pod trunk push LibXMTP.podspec --allow-warnings
        # Lint XMTP against the local LibXMTP spec to avoid CDN propagation timing
        pod lib lint XMTP.podspec --include-podspecs=LibXMTP.podspec --allow-warnings
        # Push XMTP; retry to tolerate CDN propagation delays for LibXMTP
        for i in 1 2 3 4 5; do
          if pod trunk push XMTP.podspec --allow-warnings; then
            break
          fi
          echo "Retrying pod trunk push for XMTP in 30s (attempt $i)" && sleep 30
        done
      env:
        COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
